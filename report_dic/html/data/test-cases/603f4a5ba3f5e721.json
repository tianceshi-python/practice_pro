{
  "uid" : "603f4a5ba3f5e721",
  "name" : "test_StopRecording001",
  "fullName" : "testCase.test_RecordingAndVods.test_StopRecording.Test_StopRecording#test_StopRecording001",
  "historyId" : "acbb70e9ef96d256d1b6808b7c15de02",
  "time" : {
    "start" : 1595920901164,
    "stop" : 1595920901347,
    "duration" : 183
  },
  "description" : "\n        用例描述： 开始录制视频\n        ",
  "descriptionHtml" : "<pre><code>    用例描述： 开始录制视频\n</code></pre>\n",
  "status" : "broken",
  "statusMessage" : "PermissionError: [Errno 13] Permission denied: 'recordingVods_casedata.xlsx'",
  "statusTrace" : "self = <test_StopRecording.Test_StopRecording object at 0x00000217DCA28B00>\n\n    @pytest.mark.run(order=2)\n    @pytest.mark.RecordingAndVods\n    @allure.story('test_StopRecording')\n    @allure.title('test_StopRecording001')\n    def test_StopRecording001(self):\n        '''\n        用例描述： 开始录制视频\n        '''\n    \n        self.log.debug('test_StopRecording001 starting......')\n        print('test_StopRecording001 starting......')\n    \n        # 获取云会议室callNumber\n        meetingRoomNumber = self.get_caseDataObj.get_data(ExcelName='recordingVods_casedata.xlsx', sheetName='test_data',\n                                                   testName='test_StopRecording001', getdata='meetingRoomNumber')\n        # 获取期望返回码excepectCode\n        excepectCode = self.get_caseDataObj.get_data(ExcelName='recordingVods_casedata.xlsx',\n                                                     sheetName='ExpectedResult', testName='test_StopRecording001',\n                                                     getdata='expected_code')\n    \n    \n        print('meetingRoomNumber is: ',meetingRoomNumber)\n        print('excepectCode is: ',excepectCode)\n    \n        # 添加附件信息到allure报告中\n        allure.attach('meetingRoomNumber is: ', meetingRoomNumber)\n        allure.attach('excepectCode is: ', excepectCode)\n        allure.attach('stop_recording_base_url is: ', self.stop_recording_base_url)\n    \n        self.log.debug('meetingRoomNumber is: ' + meetingRoomNumber)\n        self.log.debug('excepectCode is: ' + excepectCode)\n        self.log.debug('stop_recording_base_url is: ' + self.stop_recording_base_url)\n    \n        # 调取踢出会议接口，将指定的参会人员踢出会议\n        code, body = self.recordingVodsObj.stop_recording(self.stop_recording_base_url, meetingRoomNumber)\n        print('code is: ', code)\n        print('body is', body)\n    \n>       self.writeExcelObj.write_xml(sheet_name = 'responseData',case_name = 'test_StopRecording001', message = body)\n\n..\\test_RecordingAndVods\\test_StopRecording.py:89: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\writeExcel.py:69: in write_xml\n    mywb.save(self.xls_name)    #注意：直接操作文件名\n..\\..\\venv\\lib\\site-packages\\openpyxl\\workbook\\workbook.py:392: in save\n    save_workbook(self, filename)\n..\\..\\venv\\lib\\site-packages\\openpyxl\\writer\\excel.py:291: in save_workbook\n    archive = ZipFile(filename, 'w', ZIP_DEFLATED, allowZip64=True)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <zipfile.ZipFile [closed]>, file = 'recordingVods_casedata.xlsx'\nmode = 'w', compression = 8, allowZip64 = True, compresslevel = None\n\n    def __init__(self, file, mode=\"r\", compression=ZIP_STORED, allowZip64=True,\n                 compresslevel=None):\n        \"\"\"Open the ZIP file with mode read 'r', write 'w', exclusive create 'x',\n        or append 'a'.\"\"\"\n        if mode not in ('r', 'w', 'x', 'a'):\n            raise ValueError(\"ZipFile requires mode 'r', 'w', 'x', or 'a'\")\n    \n        _check_compression(compression)\n    \n        self._allowZip64 = allowZip64\n        self._didModify = False\n        self.debug = 0  # Level of printing: 0 through 3\n        self.NameToInfo = {}    # Find file info given name\n        self.filelist = []      # List of ZipInfo instances for archive\n        self.compression = compression  # Method of compression\n        self.compresslevel = compresslevel\n        self.mode = mode\n        self.pwd = None\n        self._comment = b''\n    \n        # Check if we were passed a file-like object\n        if isinstance(file, os.PathLike):\n            file = os.fspath(file)\n        if isinstance(file, str):\n            # No, it's a filename\n            self._filePassed = 0\n            self.filename = file\n            modeDict = {'r' : 'rb', 'w': 'w+b', 'x': 'x+b', 'a' : 'r+b',\n                        'r+b': 'w+b', 'w+b': 'wb', 'x+b': 'xb'}\n            filemode = modeDict[mode]\n            while True:\n                try:\n>                   self.fp = io.open(file, filemode)\nE                   PermissionError: [Errno 13] Permission denied: 'recordingVods_casedata.xlsx'\n\nC:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python37\\lib\\zipfile.py:1204: PermissionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_Class__pytest_setup_class",
    "time" : {
      "start" : 1595920901152,
      "stop" : 1595920901154,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "_Class__pytest_setup_method",
    "time" : {
      "start" : 1595920901154,
      "stop" : 1595920901164,
      "duration" : 10
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "\n        用例描述： 开始录制视频\n        ",
    "status" : "broken",
    "statusMessage" : "PermissionError: [Errno 13] Permission denied: 'recordingVods_casedata.xlsx'",
    "statusTrace" : "self = <test_StopRecording.Test_StopRecording object at 0x00000217DCA28B00>\n\n    @pytest.mark.run(order=2)\n    @pytest.mark.RecordingAndVods\n    @allure.story('test_StopRecording')\n    @allure.title('test_StopRecording001')\n    def test_StopRecording001(self):\n        '''\n        用例描述： 开始录制视频\n        '''\n    \n        self.log.debug('test_StopRecording001 starting......')\n        print('test_StopRecording001 starting......')\n    \n        # 获取云会议室callNumber\n        meetingRoomNumber = self.get_caseDataObj.get_data(ExcelName='recordingVods_casedata.xlsx', sheetName='test_data',\n                                                   testName='test_StopRecording001', getdata='meetingRoomNumber')\n        # 获取期望返回码excepectCode\n        excepectCode = self.get_caseDataObj.get_data(ExcelName='recordingVods_casedata.xlsx',\n                                                     sheetName='ExpectedResult', testName='test_StopRecording001',\n                                                     getdata='expected_code')\n    \n    \n        print('meetingRoomNumber is: ',meetingRoomNumber)\n        print('excepectCode is: ',excepectCode)\n    \n        # 添加附件信息到allure报告中\n        allure.attach('meetingRoomNumber is: ', meetingRoomNumber)\n        allure.attach('excepectCode is: ', excepectCode)\n        allure.attach('stop_recording_base_url is: ', self.stop_recording_base_url)\n    \n        self.log.debug('meetingRoomNumber is: ' + meetingRoomNumber)\n        self.log.debug('excepectCode is: ' + excepectCode)\n        self.log.debug('stop_recording_base_url is: ' + self.stop_recording_base_url)\n    \n        # 调取踢出会议接口，将指定的参会人员踢出会议\n        code, body = self.recordingVodsObj.stop_recording(self.stop_recording_base_url, meetingRoomNumber)\n        print('code is: ', code)\n        print('body is', body)\n    \n>       self.writeExcelObj.write_xml(sheet_name = 'responseData',case_name = 'test_StopRecording001', message = body)\n\n..\\test_RecordingAndVods\\test_StopRecording.py:89: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\writeExcel.py:69: in write_xml\n    mywb.save(self.xls_name)    #注意：直接操作文件名\n..\\..\\venv\\lib\\site-packages\\openpyxl\\workbook\\workbook.py:392: in save\n    save_workbook(self, filename)\n..\\..\\venv\\lib\\site-packages\\openpyxl\\writer\\excel.py:291: in save_workbook\n    archive = ZipFile(filename, 'w', ZIP_DEFLATED, allowZip64=True)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <zipfile.ZipFile [closed]>, file = 'recordingVods_casedata.xlsx'\nmode = 'w', compression = 8, allowZip64 = True, compresslevel = None\n\n    def __init__(self, file, mode=\"r\", compression=ZIP_STORED, allowZip64=True,\n                 compresslevel=None):\n        \"\"\"Open the ZIP file with mode read 'r', write 'w', exclusive create 'x',\n        or append 'a'.\"\"\"\n        if mode not in ('r', 'w', 'x', 'a'):\n            raise ValueError(\"ZipFile requires mode 'r', 'w', 'x', or 'a'\")\n    \n        _check_compression(compression)\n    \n        self._allowZip64 = allowZip64\n        self._didModify = False\n        self.debug = 0  # Level of printing: 0 through 3\n        self.NameToInfo = {}    # Find file info given name\n        self.filelist = []      # List of ZipInfo instances for archive\n        self.compression = compression  # Method of compression\n        self.compresslevel = compresslevel\n        self.mode = mode\n        self.pwd = None\n        self._comment = b''\n    \n        # Check if we were passed a file-like object\n        if isinstance(file, os.PathLike):\n            file = os.fspath(file)\n        if isinstance(file, str):\n            # No, it's a filename\n            self._filePassed = 0\n            self.filename = file\n            modeDict = {'r' : 'rb', 'w': 'w+b', 'x': 'x+b', 'a' : 'r+b',\n                        'r+b': 'w+b', 'w+b': 'wb', 'x+b': 'xb'}\n            filemode = modeDict[mode]\n            while True:\n                try:\n>                   self.fp = io.open(file, filemode)\nE                   PermissionError: [Errno 13] Permission denied: 'recordingVods_casedata.xlsx'\n\nC:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python37\\lib\\zipfile.py:1204: PermissionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "4ca2203495ec0839",
      "name" : "9005853980",
      "source" : "4ca2203495ec0839.attach",
      "type" : "text/plain",
      "size" : 22
    }, {
      "uid" : "a517640316175d02",
      "name" : "200",
      "source" : "a517640316175d02.attach",
      "type" : "text/plain",
      "size" : 17
    }, {
      "uid" : "dabfd6944afb6b53",
      "name" : "https://sdk.xylink.com/api/rest/external/v2/meeting/recording/",
      "source" : "dabfd6944afb6b53.attach",
      "type" : "text/plain",
      "size" : 28
    }, {
      "uid" : "1abd2d27b8e9b8dd",
      "name" : "log",
      "source" : "1abd2d27b8e9b8dd.txt",
      "type" : "text/plain",
      "size" : 1235
    } ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 4,
    "stepsCount" : 0,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "_Class__pytest_setup_class::0",
    "time" : {
      "start" : 1595920901568,
      "stop" : 1595920901568,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "_Class__pytest_setup_method::0",
    "time" : {
      "start" : 1595920901567,
      "stop" : 1595920901567,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "test_StopRecording"
  }, {
    "name" : "feature",
    "value" : "Test_StopRecording"
  }, {
    "name" : "tag",
    "value" : "RecordingAndVods"
  }, {
    "name" : "tag",
    "value" : "run(order=2)"
  }, {
    "name" : "parentSuite",
    "value" : "testCase.test_RecordingAndVods"
  }, {
    "name" : "suite",
    "value" : "test_StopRecording"
  }, {
    "name" : "subSuite",
    "value" : "Test_StopRecording"
  }, {
    "name" : "host",
    "value" : "DESKTOP-8HDD4PN"
  }, {
    "name" : "thread",
    "value" : "18124-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testCase.test_RecordingAndVods.test_StopRecording"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "run(order=2)", "RecordingAndVods" ]
  },
  "source" : "603f4a5ba3f5e721.json",
  "parameterValues" : [ ]
}